{
	"info": {
		"_postman_id": "anabank-complete-system",
		"name": "AnaBank - Sistema Completo",
		"description": "Collection completa do sistema bancario AnaBank - Todas as funcionalidades testadas automaticamente",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "01 - SETUP E VALIDACAO",
			"item": [
				{
					"name": "Health Check - Accounts API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Health Check - Accounts API funcionando', () => {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.status).to.equal('Healthy');",
									"});",
									"console.log('✅ Accounts API online');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{accounts_url}}/health",
							"host": ["{{accounts_url}}"],
							"path": ["health"]
						}
					}
				},
				{
					"name": "Health Check - Transfers API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Health Check - Transfers API funcionando', () => {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.status).to.equal('Healthy');",
									"});",
									"console.log('✅ Transfers API online');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{transfers_url}}/health",
							"host": ["{{transfers_url}}"],
							"path": ["health"]
						}
					}
				}
			]
		},
		{
			"name": "02 - USUARIO ORIGEM",
			"item": [
				{
					"name": "Cadastrar Usuario Origem",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('user1_account_id', response.id);",
									"    pm.environment.set('user1_account_number', response.number);",
									"    pm.test('Usuario origem cadastrado com sucesso', () => {",
									"        pm.expect(response.id).to.not.be.empty;",
									"        pm.expect(response.number).to.not.be.empty;",
									"        pm.expect(response.name).to.equal('Carlos Silva');",
									"    });",
									"    console.log('✅ Usuario origem cadastrado - ID:', response.id, 'Numero:', response.number);",
									"} else if (pm.response.code === 400) {",
									"    pm.test('Usuario origem ja existe - continuando teste', () => {",
									"        pm.expect(pm.response.code).to.equal(400);",
									"    });",
									"    console.log('⚠️ Usuario origem ja cadastrado - continuando...');",
									"} else {",
									"    pm.test('Erro no cadastro do usuario origem', () => {",
									"        pm.expect.fail('Erro: ' + pm.response.text());",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Carlos Silva\",\n    \"cpf\": \"11144477735\",\n    \"password\": \"senha123\"\n}"
						},
						"url": {
							"raw": "{{accounts_url}}/api/accounts",
							"host": ["{{accounts_url}}"],
							"path": ["api", "accounts"]
						}
					}
				},
				{
					"name": "Login Usuario Origem",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('user1_token', response.token);",
									"    pm.test('Login usuario origem realizado com sucesso', () => {",
									"        pm.expect(response.token).to.not.be.empty;",
									"    });",
									"    console.log('✅ Usuario origem logado - Token JWT capturado');",
									"} else {",
									"    pm.test('Erro no login do usuario origem', () => {",
									"        pm.expect.fail('Login falhou: ' + pm.response.text());",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cpfOrNumber\": \"11144477735\",\n    \"password\": \"senha123\"\n}"
						},
						"url": {
							"raw": "{{accounts_url}}/api/accounts/login",
							"host": ["{{accounts_url}}"],
							"path": ["api", "accounts", "login"]
						}
					}
				},
				{
					"name": "Deposito Usuario Origem - R$ 5.000",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Deposito usuario origem realizado', () => {",
									"    pm.expect(pm.response.code).to.equal(204);",
									"});",
									"console.log('✅ Usuario origem depositou R$ 5.000,00');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{user1_token}}"
							},
							{
								"key": "Idempotency-Key",
								"value": "deposit-user1-5000"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"C\",\n    \"value\": 5000.00\n}"
						},
						"url": {
							"raw": "{{accounts_url}}/api/accounts/movements",
							"host": ["{{accounts_url}}"],
							"path": ["api", "accounts", "movements"]
						}
					}
				},
				{
					"name": "Consultar Saldo Inicial Usuario Origem",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('user1_balance_initial', response.balance);",
									"    pm.test('Saldo inicial usuario origem: R$ ' + response.balance, () => {",
									"        pm.expect(response.balance).to.equal(5000);",
									"    });",
									"    console.log('✅ Saldo inicial usuario origem: R$', response.balance);",
									"} else {",
									"    pm.test('Erro na consulta do saldo do usuario origem', () => {",
									"        pm.expect.fail('Erro: ' + pm.response.text());",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user1_token}}"
							}
						],
						"url": {
							"raw": "{{accounts_url}}/api/accounts/balance",
							"host": ["{{accounts_url}}"],
							"path": ["api", "accounts", "balance"]
						}
					}
				}
			]
		},
		{
			"name": "03 - USUARIO DESTINO",
			"item": [
				{
					"name": "Cadastrar Usuario Destino",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('user2_account_id', response.id);",
									"    pm.environment.set('user2_account_number', response.number);",
									"    pm.test('Usuario destino cadastrado com sucesso', () => {",
									"        pm.expect(response.id).to.not.be.empty;",
									"        pm.expect(response.number).to.not.be.empty;",
									"        pm.expect(response.name).to.equal('Maria Santos');",
									"    });",
									"    console.log('✅ Usuario destino cadastrado - ID:', response.id, 'Numero:', response.number);",
									"} else if (pm.response.code === 400) {",
									"    pm.test('Usuario destino ja existe - continuando teste', () => {",
									"        pm.expect(pm.response.code).to.equal(400);",
									"    });",
									"    console.log('⚠️ Usuario destino ja cadastrado - continuando...');",
									"} else {",
									"    pm.test('Erro no cadastro do usuario destino', () => {",
									"        pm.expect.fail('Erro: ' + pm.response.text());",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Maria Santos\",\n    \"cpf\": \"52998224725\",\n    \"password\": \"senha456\"\n}"
						},
						"url": {
							"raw": "{{accounts_url}}/api/accounts",
							"host": ["{{accounts_url}}"],
							"path": ["api", "accounts"]
						}
					}
				},
				{
					"name": "Login Usuario Destino",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('user2_token', response.token);",
									"    pm.test('Login usuario destino realizado com sucesso', () => {",
									"        pm.expect(response.token).to.not.be.empty;",
									"    });",
									"    console.log('✅ Usuario destino logado - Token JWT capturado');",
									"} else {",
									"    pm.test('Erro no login do usuario destino', () => {",
									"        pm.expect.fail('Login falhou: ' + pm.response.text());",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cpfOrNumber\": \"52998224725\",\n    \"password\": \"senha456\"\n}"
						},
						"url": {
							"raw": "{{accounts_url}}/api/accounts/login",
							"host": ["{{accounts_url}}"],
							"path": ["api", "accounts", "login"]
						}
					}
				},
				{
					"name": "Deposito Usuario Destino - R$ 1.000",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Deposito usuario destino realizado', () => {",
									"    pm.expect(pm.response.code).to.equal(204);",
									"});",
									"console.log('✅ Usuario destino depositou R$ 1.000,00');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{user2_token}}"
							},
							{
								"key": "Idempotency-Key",
								"value": "deposit-user2-1000"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"C\",\n    \"value\": 1000.00\n}"
						},
						"url": {
							"raw": "{{accounts_url}}/api/accounts/movements",
							"host": ["{{accounts_url}}"],
							"path": ["api", "accounts", "movements"]
						}
					}
				},
				{
					"name": "Consultar Saldo Inicial Usuario Destino",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('user2_balance_initial', response.balance);",
									"    pm.test('Saldo inicial usuario destino: R$ ' + response.balance, () => {",
									"        pm.expect(response.balance).to.equal(1000);",
									"    });",
									"    console.log('✅ Saldo inicial usuario destino: R$', response.balance);",
									"} else {",
									"    pm.test('Erro na consulta do saldo do usuario destino', () => {",
									"        pm.expect.fail('Erro: ' + pm.response.text());",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user2_token}}"
							}
						],
						"url": {
							"raw": "{{accounts_url}}/api/accounts/balance",
							"host": ["{{accounts_url}}"],
							"path": ["api", "accounts", "balance"]
						}
					}
				}
			]
		},
		{
			"name": "04 - TRANSFERENCIAS",
			"item": [
				{
					"name": "Transferencia 1 - R$ 100",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Transferencia R$ 100 realizada', () => {",
									"    pm.expect(pm.response.code).to.equal(204);",
									"});",
									"console.log('✅ Transferencia R$ 100: Usuario 1 → Usuario 2');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{user1_token}}"
							},
							{
								"key": "Idempotency-Key",
								"value": "transfer-user1-user2-100"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"destinationAccountNumber\": \"{{user2_account_number}}\",\n    \"value\": 100.00\n}"
						},
						"url": {
							"raw": "{{transfers_url}}/api/transfers",
							"host": ["{{transfers_url}}"],
							"path": ["api", "transfers"]
						}
					}
				},
				{
					"name": "Transferencia 2 - R$ 250",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Transferencia R$ 250 realizada', () => {",
									"    pm.expect(pm.response.code).to.equal(204);",
									"});",
									"console.log('✅ Transferencia R$ 250: Usuario 1 → Usuario 2');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{user1_token}}"
							},
							{
								"key": "Idempotency-Key",
								"value": "transfer-user1-user2-250"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"destinationAccountNumber\": \"{{user2_account_number}}\",\n    \"value\": 250.00\n}"
						},
						"url": {
							"raw": "{{transfers_url}}/api/transfers",
							"host": ["{{transfers_url}}"],
							"path": ["api", "transfers"]
						}
					}
				},
				{
					"name": "Transferencia 3 - R$ 150",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Transferencia R$ 150 realizada', () => {",
									"    pm.expect(pm.response.code).to.equal(204);",
									"});",
									"console.log('✅ Transferencia R$ 150: Usuario 1 → Usuario 2');",
									"console.log('⏳ Aguardando Worker processar tarifas via Kafka...');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{user1_token}}"
							},
							{
								"key": "Idempotency-Key",
								"value": "transfer-user1-user2-150"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"destinationAccountNumber\": \"{{user2_account_number}}\",\n    \"value\": 150.00\n}"
						},
						"url": {
							"raw": "{{transfers_url}}/api/transfers",
							"host": ["{{transfers_url}}"],
							"path": ["api", "transfers"]
						}
					}
				},
				{
					"name": "Aguardar Processamento Kafka (10s)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Aguardando processamento de tarifas', () => {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});",
									"console.log('⏳ Worker deve processar 3 tarifas de R$ 2,00 cada (total R$ 6,00)');"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"setTimeout(() => {}, 10000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{accounts_url}}/health",
							"host": ["{{accounts_url}}"],
							"path": ["health"]
						}
					}
				}
			]
		},
		{
			"name": "05 - VALIDACAO FINAL",
			"item": [
				{
					"name": "Saldo Final Usuario Origem",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    const expectedBalance = 4494;",
									"    pm.environment.set('user1_balance_final', response.balance);",
									"    ",
									"    pm.test('Saldo final usuario origem: R$ ' + response.balance + ' (esperado: R$ ' + expectedBalance + ')', () => {",
									"        pm.expect(response.balance).to.be.closeTo(expectedBalance, 10);",
									"    });",
									"    ",
									"    console.log('💰 Saldo final usuario origem: R$', response.balance);",
									"    console.log('📊 Calculo: R$ 5.000 - R$ 500 (transferencias) - R$ 6 (tarifas) = R$ 4.494');",
									"    ",
									"    if (response.balance === expectedBalance) {",
									"        console.log('✅ PERFEITO! Saldo exato como esperado!');",
									"    } else {",
									"        console.log('⚠️ Diferenca de R$', Math.abs(response.balance - expectedBalance), '- Pode ser processamento assincrono');",
									"    }",
									"} else {",
									"    pm.test('Erro na consulta do saldo final do usuario origem', () => {",
									"        pm.expect.fail('Erro: ' + pm.response.text());",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user1_token}}"
							}
						],
						"url": {
							"raw": "{{accounts_url}}/api/accounts/balance",
							"host": ["{{accounts_url}}"],
							"path": ["api", "accounts", "balance"]
						}
					}
				},
				{
					"name": "Saldo Final Usuario Destino",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    const expectedBalance = 1500;",
									"    pm.environment.set('user2_balance_final', response.balance);",
									"    ",
									"    pm.test('Saldo final usuario destino: R$ ' + response.balance + ' (esperado: R$ ' + expectedBalance + ')', () => {",
									"        pm.expect(response.balance).to.equal(expectedBalance);",
									"    });",
									"    ",
									"    console.log('💰 Saldo final usuario destino: R$', response.balance);",
									"    console.log('📊 Calculo: R$ 1.000 + R$ 500 (recebimentos) = R$ 1.500');",
									"    ",
									"    if (response.balance === expectedBalance) {",
									"        console.log('✅ PERFEITO! Saldo exato como esperado!');",
									"    }",
									"} else {",
									"    pm.test('Erro na consulta do saldo final do usuario destino', () => {",
									"        pm.expect.fail('Erro: ' + pm.response.text());",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user2_token}}"
							}
						],
						"url": {
							"raw": "{{accounts_url}}/api/accounts/balance",
							"host": ["{{accounts_url}}"],
							"path": ["api", "accounts", "balance"]
						}
					}
				},
				{
					"name": "Resumo Final do Sistema",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('SISTEMA ANABANK FINALIZADO COM SUCESSO', () => {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"const user1Initial = pm.environment.get('user1_balance_initial') || 0;",
									"const user1Final = pm.environment.get('user1_balance_final') || 0;",
									"const user2Initial = pm.environment.get('user2_balance_initial') || 0;",
									"const user2Final = pm.environment.get('user2_balance_final') || 0;",
									"",
									"console.log('===============================================');",
									"console.log('🎉 SISTEMA ANABANK FINALIZADO COM SUCESSO!');",
									"console.log('===============================================');",
									"console.log('');",
									"console.log('👤 USUARIO ORIGEM:');",
									"console.log('   Saldo inicial: R$', user1Initial);",
									"console.log('   Saldo final:   R$', user1Final);",
									"console.log('   Diferenca:     R$', (user1Final - user1Initial));",
									"console.log('');",
									"console.log('👨 USUARIO DESTINO:');",
									"console.log('   Saldo inicial: R$', user2Initial);",
									"console.log('   Saldo final:   R$', user2Final);",
									"console.log('   Diferenca:     R$', (user2Final - user2Initial));",
									"console.log('');",
									"console.log('📊 OPERACOES REALIZADAS:');",
									"console.log('   ✅ 3 Transferencias (R$ 100 + R$ 250 + R$ 150 = R$ 500)');",
									"console.log('   ✅ 3 Tarifas processadas via Kafka (3 × R$ 2 = R$ 6)');",
									"console.log('   ✅ Worker funcionando corretamente');",
									"console.log('   ✅ JWT Authentication funcionando');",
									"console.log('   ✅ APIs Accounts + Transfers funcionando');",
									"console.log('');",
									"console.log('🏆 SISTEMA ANABANK 100% FUNCIONAL!');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{accounts_url}}/health",
							"host": ["{{accounts_url}}"],
							"path": ["health"]
						}
					}
				}
			]
		}
	]
}}